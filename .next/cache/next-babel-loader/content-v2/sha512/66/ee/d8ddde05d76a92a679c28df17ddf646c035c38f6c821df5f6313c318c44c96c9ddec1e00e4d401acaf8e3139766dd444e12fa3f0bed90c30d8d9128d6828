{"ast":null,"code":"import _extends from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\shabb\\\\Project\\\\Resci\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { GeistProvider, CssBaseline } from '@geist-ui/react';\nimport { generateSignature } from \"../lib/signerconnect\";\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(null),\n      provider = _useState[0],\n      setProvider = _useState[1];\n\n  var connectUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$generateSignat, seed, metamask;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return generateSignature();\n\n            case 2:\n              _yield$generateSignat = _context.sent;\n              seed = _yield$generateSignat.seed;\n              metamask = _yield$generateSignat.metamask;\n              setProvider(metamask);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function connectUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  pageProps['connectUser'] = connectUser;\n  return __jsx(GeistProvider, {\n    theme: {\n      type: 'light'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    provider: provider,\n    connectUser: connectUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n}\n\n_s(MyApp, \"xtTuOAY8k/s2BV2pXmjZ667ORoM=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/shabb/Project/Resci/pages/_app.js"],"names":["React","useState","GeistProvider","CssBaseline","generateSignature","MyApp","Component","pageProps","provider","setProvider","connectUser","seed","metamask","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,iBAA3C;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAEPN,QAAQ,CAAC,IAAD,CAFD;AAAA,MAEhCO,QAFgC;AAAA,MAEtBC,WAFsB;;AAIvC,MAAMC,WAAW;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaN,iBAAiB,EAD9B;;AAAA;AAAA;AACXO,cAAAA,IADW,yBACXA,IADW;AACLC,cAAAA,QADK,yBACLA,QADK;AAElBH,cAAAA,WAAW,CAACG,QAAD,CAAX;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXF,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAKAH,EAAAA,SAAS,CAAC,aAAD,CAAT,GAA2BG,WAA3B;AAEA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeN,SAAf;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,WAAW,EAAEE,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD;;GAjBQL,K;;KAAAA,K;AAkBT,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'\nimport { GeistProvider, CssBaseline } from '@geist-ui/react'\nimport {generateSignature} from \"../lib/signerconnect\"\n\nfunction MyApp({ Component, pageProps }) {\n\n  const [provider, setProvider] = useState(null);\n\n  const connectUser = async () => {\n    const {seed, metamask} = await generateSignature();\n    setProvider(metamask)\n  }\n  \n  pageProps['connectUser'] = connectUser\n  \n  return (\n    <GeistProvider theme={{ type: 'light' }}>\n      <CssBaseline />\n      <Component {...pageProps} provider={provider} connectUser={connectUser}/>\n    </GeistProvider>\n  )\n}\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}