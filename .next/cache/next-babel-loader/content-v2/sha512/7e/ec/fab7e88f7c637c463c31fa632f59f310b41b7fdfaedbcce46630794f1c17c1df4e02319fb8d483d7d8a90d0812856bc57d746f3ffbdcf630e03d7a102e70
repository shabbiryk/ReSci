{"ast":null,"code":"import _extends from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/shabb/Project/Resci/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\shabb\\\\Project\\\\Resci\\\\components\\\\MyDropzone.js\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Buckets } from '@textile/hub';\nimport { getMetamaskIdentity } from '../lib/signerconnect';\nimport { Card, Text, Row, Col, Loading } from '@geist-ui/react';\nimport { Upload, Meh } from '@geist-ui/react-icons';\nimport Form from './Form';\nimport Private from \"./Private\";\n\nvar MyDropzone = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyDropzone, _React$Component);\n\n  var _super = _createSuper(MyDropzone);\n\n  function MyDropzone() {\n    var _this;\n\n    _classCallCheck(this, MyDropzone);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"ipfsGateway\", 'https://hub.textile.io');\n\n    _defineProperty(_assertThisInitialized(_this), \"keyInfo\", {\n      key: 'bxch3ikjx6yg2m4ewyeussjeuoy'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keyInfoOptions\", {\n      debug: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isLoading: true,\n      submitSuccess: false,\n      files: [],\n      index: {\n        author: '',\n        date: 0,\n        paths: [],\n        loadingMessage: \"loading\"\n      },\n      input_file: null,\n      title: null,\n      authors: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getIdentity\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              return _context.abrupt(\"return\", getMetamaskIdentity());\n\n            case 4:\n              _context.prev = 4;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Couldn't connect to metamask\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 4]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getBucketKey\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var buckets, buck;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this.state.identity) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new Error('Identity not set');\n\n            case 2:\n              _context2.next = 4;\n              return Buckets.withKeyInfo(_this.keyInfo, _this.keyInfoOptions);\n\n            case 4:\n              buckets = _context2.sent;\n              _context2.next = 7;\n              return buckets.getToken(_this.state.identity);\n\n            case 7:\n              _context2.next = 9;\n              return buckets.getOrCreate('io.textile.dropzone');\n\n            case 9:\n              buck = _context2.sent;\n\n              if (buck.root) {\n                _context2.next = 12;\n                break;\n              }\n\n              throw new Error('Failed to open bucket');\n\n            case 12:\n              return _context2.abrupt(\"return\", {\n                buckets: buckets,\n                bucketKey: buck.root.key\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getBucketLinks\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var links;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                _context3.next = 3;\n                break;\n              }\n\n              console.error('No bucket client or root key');\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              _context3.next = 5;\n              return _this.state.buckets.links(_this.state.bucketKey);\n\n            case 5:\n              links = _context3.sent;\n\n              _this.setState(_objectSpread({}, links));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"storeIndex\", /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(index) {\n        var buf, path;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                console.error('No bucket client or root key');\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                buf = Buffer.from(JSON.stringify(index, null, 2));\n                path = \"index.json\";\n                _context4.next = 7;\n                return _this.state.buckets.pushPath(_this.state.bucketKey, path, buf);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"initIndex\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var index;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (_this.state.identity) {\n                _context5.next = 3;\n                break;\n              }\n\n              console.error('Identity not set');\n              return _context5.abrupt(\"return\");\n\n            case 3:\n              // this will be converted to JSON, this is author metadata\n              index = {\n                author: _this.state.identity[\"public\"].toString(),\n                date: new Date().getTime(),\n                paths: []\n              };\n              _context5.next = 6;\n              return _this.storeIndex(index);\n\n            case 6:\n              return _context5.abrupt(\"return\", index);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"filelistFromIndex\", /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(index) {\n        var _iterator, _step, path, metadata, _yield$metadata$next, value, str, i, json, file;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this.setState({\n                  loadingMessage: \"fetching filelist\"\n                });\n\n                if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                console.error('No bucket client or root key');\n                return _context6.abrupt(\"return\");\n\n              case 4:\n                // get file paths from index.paths array\n                _iterator = _createForOfIteratorHelper(index.paths);\n                _context6.prev = 5;\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 29;\n                  break;\n                }\n\n                path = _step.value;\n                console.log(path);\n                _context6.next = 12;\n                return _this.state.buckets.pullPath(_this.state.bucketKey, path);\n\n              case 12:\n                metadata = _context6.sent;\n                _context6.t0 = console;\n                _context6.next = 16;\n                return _this.state.buckets.links(_this.state.bucketKey);\n\n              case 16:\n                _context6.t1 = _context6.sent;\n\n                _context6.t0.log.call(_context6.t0, _context6.t1);\n\n                _context6.next = 20;\n                return metadata.next();\n\n              case 20:\n                _yield$metadata$next = _context6.sent;\n                value = _yield$metadata$next.value;\n                str = \"\";\n\n                for (i = 0; i < value.length; i++) {\n                  str += String.fromCharCode(parseInt(value[i]));\n                }\n\n                json = JSON.parse(str);\n                file = json.original;\n\n                _this.setState({\n                  files: [].concat(_toConsumableArray(_this.state.files), [{\n                    src: \"\".concat(_this.ipfsGateway, \"/ipfs/\").concat(file.cid),\n                    key: file.name,\n                    authors: file.authors,\n                    title: file.title\n                  }])\n                });\n\n              case 27:\n                _context6.next = 7;\n                break;\n\n              case 29:\n                _context6.next = 34;\n                break;\n\n              case 31:\n                _context6.prev = 31;\n                _context6.t2 = _context6[\"catch\"](5);\n\n                _iterator.e(_context6.t2);\n\n              case 34:\n                _context6.prev = 34;\n\n                _iterator.f();\n\n                return _context6.finish(34);\n\n              case 37:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[5, 31, 34, 37]]);\n      }));\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getJSONFromBucket\", /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(path) {\n        var data, _yield$data$next, value, str, i, json_data;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = _this.state.buckets.pullPath(_this.state.bucketKey, path);\n                _context7.next = 3;\n                return data.next();\n\n              case 3:\n                _yield$data$next = _context7.sent;\n                value = _yield$data$next.value;\n                str = \"\";\n\n                for (i = 0; i < value.length; i++) {\n                  str += String.fromCharCode(parseInt(value[i]));\n                }\n\n                json_data = JSON.parse(str);\n                return _context7.abrupt(\"return\", json_data);\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x3) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getFileIndex\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var index, _index;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                _context8.next = 3;\n                break;\n              }\n\n              console.error('No bucket client or root key');\n              return _context8.abrupt(\"return\");\n\n            case 3:\n              _context8.prev = 3;\n              _context8.next = 6;\n              return _this.getJSONFromBucket('index.json');\n\n            case 6:\n              index = _context8.sent;\n              return _context8.abrupt(\"return\", index);\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](3);\n              console.log(_context8.t0);\n              console.log(\"\\n\\ninitializing INDEX\\n\\n\");\n              _context8.next = 16;\n              return _this.initIndex();\n\n            case 16:\n              _index = _context8.sent;\n              return _context8.abrupt(\"return\", _index);\n\n            case 18:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[3, 10]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"insertFile\", /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(file, path) {\n        var buckets;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                  _context9.next = 2;\n                  break;\n                }\n\n                throw new Error('No bucket client or root key');\n\n              case 2:\n                buckets = _this.state.buckets;\n                _context9.next = 5;\n                return buckets.pushPath(_this.state.bucketKey, path, file.stream());\n\n              case 5:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"processAndStore\", /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(file, path, name) {\n        var location, raw, metadata;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                location = \"\".concat(path).concat(name);\n                _context10.next = 3;\n                return _this.insertFile(file, location);\n\n              case 3:\n                raw = _context10.sent;\n                metadata = {\n                  cid: raw.path.cid.toString(),\n                  name: name,\n                  path: location\n                };\n                return _context10.abrupt(\"return\", metadata);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function (_x6, _x7, _x8) {\n        return _ref10.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNewFile\", /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(file) {\n        var fileSchema, now, filename, metadata, metaname, path, fileOnBucket;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _this.setState({\n                  loadingMessage: \"handling file\"\n                });\n\n                console.log(\"handleNewFile()\");\n\n                if (!(!_this.state.buckets || !_this.state.bucketKey)) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                console.error('No bucket client or root key');\n                return _context11.abrupt(\"return\");\n\n              case 5:\n                fileSchema = {};\n                now = new Date().getTime();\n                fileSchema['date'] = now;\n                fileSchema['name'] = \"\".concat(file.name);\n                fileSchema['title'] = _this.state.title;\n                fileSchema['authors'] = _this.state.authors;\n                filename = \"\".concat(now, \"_\").concat(file.name);\n\n                _this.setState({\n                  loadingMessage: \"pushing file to bucket\"\n                });\n\n                _context11.next = 15;\n                return _this.processAndStore(file, 'originals/', filename);\n\n              case 15:\n                fileSchema['original'] = _context11.sent;\n                metadata = Buffer.from(JSON.stringify(fileSchema, null, 2));\n                metaname = \"\".concat(now, \"_\").concat(file.name, \".json\");\n                path = \"metadata/\".concat(metaname);\n\n                _this.setState({\n                  loadingMessage: \"pushing metadata\"\n                });\n\n                _context11.next = 22;\n                return _this.state.buckets.pushPath(_this.state.bucketKey, path, metadata);\n\n              case 22:\n                fileOnBucket = fileSchema['original'];\n\n                _this.setState({\n                  index: _objectSpread(_objectSpread({}, _this.state.index), {}, {\n                    paths: [].concat(_toConsumableArray(_this.state.index.paths), [path])\n                  }),\n                  files: [].concat(_toConsumableArray(_this.state.files), [{\n                    src: \"\".concat(_this.ipfsGateway, \"/ipfs/\").concat(fileOnBucket.cid),\n                    key: fileOnBucket.name,\n                    authors: _this.state.authors,\n                    title: _this.state.title\n                  }])\n                });\n\n                _this.setState({\n                  loadingMessage: null\n                });\n\n              case 25:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function (_x9) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDrop\", /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(acceptedFiles) {\n        var _iterator2, _step2, file;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(acceptedFiles);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    file = _step2.value;\n\n                    //setting a simple format date_filename\n                    _this.setState({\n                      input_file: file\n                    });\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n              case 2:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }));\n\n      return function (_x10) {\n        return _ref12.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"submitHandler\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(_this.state.input_file == null)) {\n                _context13.next = 4;\n                break;\n              }\n\n              console.error(\"\\n\\nNo file\\n\\n\");\n              _context13.next = 11;\n              break;\n\n            case 4:\n              _context13.next = 6;\n              return _this.handleNewFile(_this.state.input_file);\n\n            case 6:\n              _context13.next = 8;\n              return _this.storeIndex(_this.state.index);\n\n            case 8:\n              _this.setState({\n                input_file: null,\n                title: null,\n                authors: null\n              });\n\n              _this.storeIndex(_this.state.index);\n\n              _this.setState({\n                submitSuccess: true\n              });\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"titleHandler\", function (e) {\n      _this.setState({\n        title: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"authorsHandler\", function (e) {\n      _this.setState({\n        authors: e.target.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MyDropzone, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var identity, _yield$this$getBucket, bucketKey, buckets, index;\n\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                this.setState({\n                  loadingMessage: \"waiting for metamask\"\n                });\n                _context14.next = 3;\n                return this.getIdentity();\n\n              case 3:\n                identity = _context14.sent;\n                this.setState({\n                  identity: identity\n                });\n                this.setState({\n                  loadingMessage: \"fetching data\"\n                });\n                _context14.next = 8;\n                return this.getBucketKey();\n\n              case 8:\n                _yield$this$getBucket = _context14.sent;\n                bucketKey = _yield$this$getBucket.bucketKey;\n                buckets = _yield$this$getBucket.buckets;\n                this.setState({\n                  buckets: buckets,\n                  bucketKey: bucketKey\n                });\n                this.setState({\n                  loadingMessage: \"fetching data\"\n                });\n                _context14.next = 15;\n                return this.getBucketLinks();\n\n              case 15:\n                this.setState({\n                  loadingMessage: \"fetching data\"\n                });\n                _context14.next = 18;\n                return this.getFileIndex();\n\n              case 18:\n                index = _context14.sent;\n\n                if (!index) {\n                  _context14.next = 25;\n                  break;\n                }\n\n                _context14.next = 22;\n                return this.filelistFromIndex(index);\n\n              case 22:\n                this.setState({\n                  index: index,\n                  isLoading: false\n                });\n                _context14.next = 26;\n                break;\n\n              case 25:\n                console.log(\"No index\");\n\n              case 26:\n                this.setState({\n                  loadingMessage: null\n                });\n\n              case 27:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n    /**\n     * Textile Bucket api init\n     */\n\n  }, {\n    key: \"formatBucketData\",\n    value: function formatBucketData() {\n      var res = [];\n\n      for (var f in this.state.files) {\n        res.push({\n          \"Name\": f.title,\n          \"Authors\": [f.authors],\n          \"Tags\": [\"Brains\", \"fMRI\"],\n          \"BIDSVersion\": \"1.0.2\"\n        });\n      }\n\n      var myData = {\n        mockData: res\n      };\n      return myData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bucketData = this.formatBucketData();\n      return __jsx(React.Fragment, null, __jsx(Dropzone, {\n        onDrop: this.onDrop,\n        maxSize: 20000000,\n        multiple: true,\n        disabled: !(this.state.loadingMessage === null),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, function (_ref14) {\n        var getRootProps = _ref14.getRootProps,\n            getInputProps = _ref14.getInputProps;\n        return __jsx(\"div\", _extends({\n          className: \"dropzone\"\n        }, getRootProps(), {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }\n        })), __jsx(Card, {\n          hoverable: true,\n          width: \"100%\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 23\n          }\n        }, _this2.state.loadingMessage === null && __jsx(React.Fragment, null, __jsx(Row, {\n          gap: 0.8,\n          justify: \"center\",\n          style: {\n            marginBottom: '15px',\n            marginTop: '15px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }\n        }, __jsx(Col, {\n          span: 1.5,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 27\n          }\n        }, __jsx(Upload, {\n          size: 40,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 31\n          }\n        }))), __jsx(Row, {\n          gap: 0.8,\n          align: \"center\",\n          style: {\n            marginBottom: '15px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }\n        }, __jsx(Col, {\n          span: 30,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 27\n          }\n        }, __jsx(Text, {\n          type: \"primary\",\n          align: \"center\",\n          medium: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 31\n          }\n        }, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 75\n          }\n        }, \"Drag and Drop\")), __jsx(Text, {\n          type: \"primary\",\n          align: \"center\",\n          medium: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 31\n          }\n        }, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 75\n          }\n        }, \"or\")), __jsx(Text, {\n          type: \"primary\",\n          align: \"center\",\n          medium: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 31\n          }\n        }, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 75\n          }\n        }, \"Click to Select Files\"))))), !(_this2.state.loadingMessage === null) && __jsx(React.Fragment, null, __jsx(Row, {\n          gap: 0.8,\n          justify: \"center\",\n          style: {\n            marginBottom: '15px',\n            marginTop: '15px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }\n        }, __jsx(Col, {\n          span: 1.5,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 27\n          }\n        }, __jsx(Meh, {\n          size: 40,\n          color: \"grey\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 31\n          }\n        }))), __jsx(Row, {\n          gap: 0.8,\n          align: \"center\",\n          style: {\n            marginBottom: '15px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }\n        }, __jsx(Col, {\n          span: 30,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 27\n          }\n        }, __jsx(Text, {\n          type: \"primary\",\n          align: \"center\",\n          medium: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 31\n          }\n        }, __jsx(\"b\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 75\n          }\n        }, \"Please Wait\")))), __jsx(Row, {\n          gap: 0.8,\n          align: \"center\",\n          style: {\n            marginBottom: '15px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }\n        }, __jsx(Col, {\n          span: 30,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 27\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }\n        }, __jsx(Row, {\n          style: {\n            padding: '10px'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 37\n          }\n        }, __jsx(Loading, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 41\n          }\n        }, _this2.state.loadingMessage))))))));\n      }), __jsx(Form, {\n        loading: this.state.loadingMessage,\n        title: this.state.title,\n        titleHandler: this.titleHandler,\n        authors: this.state.authors,\n        authorsHandler: this.authorsHandler,\n        submitHandler: this.submitHandler,\n        submitSuccess: this.state.submitSuccess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }), __jsx(Private, {\n        myData: bucketData,\n        accessData: bucketData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return MyDropzone;\n}(React.Component);\n\nexport default MyDropzone;","map":{"version":3,"sources":["C:/Users/shabb/Project/Resci/components/MyDropzone.js"],"names":["React","Dropzone","Buckets","getMetamaskIdentity","Card","Text","Row","Col","Loading","Upload","Meh","Form","Private","MyDropzone","key","debug","isLoading","submitSuccess","files","index","author","date","paths","loadingMessage","input_file","title","authors","console","log","state","identity","Error","withKeyInfo","keyInfo","keyInfoOptions","buckets","getToken","getOrCreate","buck","root","bucketKey","error","links","setState","buf","Buffer","from","JSON","stringify","path","pushPath","toString","Date","getTime","storeIndex","pullPath","metadata","next","value","str","i","length","String","fromCharCode","parseInt","json","parse","file","original","src","ipfsGateway","cid","name","data","json_data","getJSONFromBucket","initIndex","stream","location","insertFile","raw","fileSchema","now","filename","processAndStore","metaname","fileOnBucket","acceptedFiles","handleNewFile","e","target","getIdentity","getBucketKey","getBucketLinks","getFileIndex","filelistFromIndex","res","f","push","myData","mockData","bucketData","formatBucketData","onDrop","getRootProps","getInputProps","marginBottom","marginTop","padding","titleHandler","authorsHandler","submitHandler","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAAQC,mBAAR,QAAkC,sBAAlC;AACA,SAASC,IAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAA9B,QAA6C,iBAA7C;AACA,SAAQC,MAAR,EAAgBC,GAAhB,QAA0B,uBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,U;;;;;;;;;;;;;;;;kEAEY,wB;;8DACJ;AACRC,MAAAA,GAAG,EAAE;AADG,K;;qEAGO;AACfC,MAAAA,KAAK,EAAE;AADQ,K;;4DAGT;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,aAAa,EAAE,KAFX;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,EADH;AAELC,QAAAA,IAAI,EAAE,CAFD;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,cAAc,EAAE;AAJX,OAJH;AAUNC,MAAAA,UAAU,EAAE,IAVN;AAWNC,MAAAA,KAAK,EAAE,IAXD;AAYNC,MAAAA,OAAO,EAAE;AAZH,K;;wIAmDM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEHvB,mBAAmB,EAFhB;;AAAA;AAAA;AAAA;AAKVwB,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;yIASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR,MAAKC,KAAL,CAAWC,QADH;AAAA;AAAA;AAAA;;AAAA,oBAEL,IAAIC,KAAJ,CAAU,kBAAV,CAFK;;AAAA;AAAA;AAAA,qBAIS7B,OAAO,CAAC8B,WAAR,CAAoB,MAAKC,OAAzB,EAAkC,MAAKC,cAAvC,CAJT;;AAAA;AAIPC,cAAAA,OAJO;AAAA;AAAA,qBAMPA,OAAO,CAACC,QAAR,CAAiB,MAAKP,KAAL,CAAWC,QAA5B,CANO;;AAAA;AAAA;AAAA,qBAQMK,OAAO,CAACE,WAAR,CAAoB,qBAApB,CARN;;AAAA;AAQPC,cAAAA,IARO;;AAAA,kBASRA,IAAI,CAACC,IATG;AAAA;AAAA;AAAA;;AAAA,oBAUL,IAAIR,KAAJ,CAAU,uBAAV,CAVK;;AAAA;AAAA,gDAYN;AAACI,gBAAAA,OAAO,EAAEA,OAAV;AAAmBK,gBAAAA,SAAS,EAAEF,IAAI,CAACC,IAAL,CAAUzB;AAAxC,eAZM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;2IAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACX,CAAC,MAAKe,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SADxB;AAAA;AAAA;AAAA;;AAEbb,cAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AAFa;;AAAA;AAAA;AAAA,qBAKK,MAAKZ,KAAL,CAAWM,OAAX,CAAmBO,KAAnB,CAAyB,MAAKb,KAAL,CAAWW,SAApC,CALL;;AAAA;AAKTE,cAAAA,KALS;;AAMf,oBAAKC,QAAL,mBACKD,KADL;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;2EAeJ,kBAAOvB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP,CAAC,MAAKU,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SAD5B;AAAA;AAAA;AAAA;;AAETb,gBAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AAFS;;AAAA;AAKLG,gBAAAA,GALK,GAKCC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe7B,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAZ,CALD;AAML8B,gBAAAA,IANK;AAAA;AAAA,uBAOL,MAAKpB,KAAL,CAAWM,OAAX,CAAmBe,QAAnB,CAA4B,MAAKrB,KAAL,CAAWW,SAAvC,EAAkDS,IAAlD,EAAwDL,GAAxD,CAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;sIAUD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,MAAKf,KAAL,CAAWC,QADN;AAAA;AAAA;AAAA;;AAERH,cAAAA,OAAO,CAACc,KAAR,CAAc,kBAAd;AAFQ;;AAAA;AAKV;AACMtB,cAAAA,KANI,GAMI;AACZC,gBAAAA,MAAM,EAAE,MAAKS,KAAL,CAAWC,QAAX,WAA2BqB,QAA3B,EADI;AAEZ9B,gBAAAA,IAAI,EAAG,IAAI+B,IAAJ,EAAD,CAAaC,OAAb,EAFM;AAGZ/B,gBAAAA,KAAK,EAAE;AAHK,eANJ;AAAA;AAAA,qBAYJ,MAAKgC,UAAL,CAAgBnC,KAAhB,CAZI;;AAAA;AAAA,gDAaHA,KAbG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;2EAgBQ,kBAAOA,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChB,sBAAKwB,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;AADgB,sBAEZ,CAAC,MAAKM,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SAFvB;AAAA;AAAA;AAAA;;AAGZb,gBAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AAHY;;AAAA;AAOhB;AAPgB,uDAQCtB,KAAK,CAACG,KARP;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQP2B,gBAAAA,IARO;AASZtB,gBAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AATY;AAAA,uBAUW,MAAKpB,KAAL,CAAWM,OAAX,CAAmBoB,QAAnB,CAA4B,MAAK1B,KAAL,CAAWW,SAAvC,EAAkDS,IAAlD,CAVX;;AAAA;AAUNO,gBAAAA,QAVM;AAAA,+BAWZ7B,OAXY;AAAA;AAAA,uBAWM,MAAKE,KAAL,CAAWM,OAAX,CAAmBO,KAAnB,CAAyB,MAAKb,KAAL,CAAWW,SAApC,CAXN;;AAAA;AAAA;;AAAA,6BAWJZ,GAXI;;AAAA;AAAA,uBAYY4B,QAAQ,CAACC,IAAT,EAZZ;;AAAA;AAAA;AAYJC,gBAAAA,KAZI,wBAYJA,KAZI;AAaRC,gBAAAA,GAbQ,GAaF,EAbE;;AAcZ,qBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,kBAAAA,GAAG,IAAIG,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACN,KAAK,CAACE,CAAD,CAAN,CAA5B,CAAP;AACH;;AACKK,gBAAAA,IAjBM,GAiBClB,IAAI,CAACmB,KAAL,CAAWP,GAAX,CAjBD;AAkBNQ,gBAAAA,IAlBM,GAkBCF,IAAI,CAACG,QAlBN;;AAmBZ,sBAAKzB,QAAL,CAAc;AACZzB,kBAAAA,KAAK,+BACA,MAAKW,KAAL,CAAWX,KADX,IAEH;AACEmD,oBAAAA,GAAG,YAAI,MAAKC,WAAT,mBAA6BH,IAAI,CAACI,GAAlC,CADL;AAEEzD,oBAAAA,GAAG,EAAEqD,IAAI,CAACK,IAFZ;AAGE9C,oBAAAA,OAAO,EAAEyC,IAAI,CAACzC,OAHhB;AAIED,oBAAAA,KAAK,EAAE0C,IAAI,CAAC1C;AAJd,mBAFG;AADO,iBAAd;;AAnBY;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;2EAiCA,kBAAOwB,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVwB,gBAAAA,IADU,GACH,MAAK5C,KAAL,CAAWM,OAAX,CAAmBoB,QAAnB,CAA4B,MAAK1B,KAAL,CAAWW,SAAvC,EAAkDS,IAAlD,CADG;AAAA;AAAA,uBAEQwB,IAAI,CAAChB,IAAL,EAFR;;AAAA;AAAA;AAERC,gBAAAA,KAFQ,oBAERA,KAFQ;AAGZC,gBAAAA,GAHY,GAGN,EAHM;;AAIhB,qBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,kBAAAA,GAAG,IAAIG,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACN,KAAK,CAACE,CAAD,CAAN,CAA5B,CAAP;AACD;;AACKc,gBAAAA,SAPU,GAOE3B,IAAI,CAACmB,KAAL,CAAWP,GAAX,CAPF;AAAA,kDAQTe,SARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;yIAWL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT,CAAC,MAAK7C,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SAD1B;AAAA;AAAA;AAAA;;AAEXb,cAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AAFW;;AAAA;AAAA;AAAA;AAAA,qBAMS,MAAKkC,iBAAL,CAAuB,YAAvB,CANT;;AAAA;AAMLxD,cAAAA,KANK;AAAA,gDAOJA,KAPI;;AAAA;AAAA;AAAA;AASXQ,cAAAA,OAAO,CAACC,GAAR;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAVW;AAAA,qBAWS,MAAKgD,SAAL,EAXT;;AAAA;AAWLzD,cAAAA,MAXK;AAAA,gDAaJA,MAbI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;2EAoBF,kBAAOgD,IAAP,EAAalB,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACP,CAAC,MAAKpB,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SAD5B;AAAA;AAAA;AAAA;;AAAA,sBAEH,IAAIT,KAAJ,CAAU,8BAAV,CAFG;;AAAA;AAILI,gBAAAA,OAJK,GAIK,MAAKN,KAAL,CAAWM,OAJhB;AAAA;AAAA,uBAKEA,OAAO,CAACe,QAAR,CAAiB,MAAKrB,KAAL,CAAWW,SAA5B,EAAuCS,IAAvC,EAA6CkB,IAAI,CAACU,MAAL,EAA7C,CALF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;4EAQK,mBAAOV,IAAP,EAAalB,IAAb,EAAmBuB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACVM,gBAAAA,QADU,aACI7B,IADJ,SACWuB,IADX;AAAA;AAAA,uBAEE,MAAKO,UAAL,CAAgBZ,IAAhB,EAAsBW,QAAtB,CAFF;;AAAA;AAEVE,gBAAAA,GAFU;AAGVxB,gBAAAA,QAHU,GAGC;AACfe,kBAAAA,GAAG,EAAES,GAAG,CAAC/B,IAAJ,CAASsB,GAAT,CAAapB,QAAb,EADU;AAEfqB,kBAAAA,IAAI,EAAEA,IAFS;AAGfvB,kBAAAA,IAAI,EAAE6B;AAHS,iBAHD;AAAA,mDAQTtB,QARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;4EAWF,mBAAOW,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,sBAAKxB,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;AACAI,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AAFY,sBAGR,CAAC,MAAKC,KAAL,CAAWM,OAAZ,IAAuB,CAAC,MAAKN,KAAL,CAAWW,SAH3B;AAAA;AAAA;AAAA;;AAIRb,gBAAAA,OAAO,CAACc,KAAR,CAAc,8BAAd;AAJQ;;AAAA;AAONwC,gBAAAA,UAPM,GAOO,EAPP;AAQNC,gBAAAA,GARM,GAQA,IAAI9B,IAAJ,GAAWC,OAAX,EARA;AAUZ4B,gBAAAA,UAAU,CAAC,MAAD,CAAV,GAAqBC,GAArB;AACAD,gBAAAA,UAAU,CAAC,MAAD,CAAV,aAAwBd,IAAI,CAACK,IAA7B;AACAS,gBAAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,MAAKpD,KAAL,CAAWJ,KAAjC;AACAwD,gBAAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,MAAKpD,KAAL,CAAWH,OAAnC;AAEMyD,gBAAAA,QAfM,aAeQD,GAfR,cAeef,IAAI,CAACK,IAfpB;;AAgBZ,sBAAK7B,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;AAhBY;AAAA,uBAiBmB,MAAK6D,eAAL,CAAqBjB,IAArB,EAA2B,YAA3B,EAAyCgB,QAAzC,CAjBnB;;AAAA;AAiBZF,gBAAAA,UAAU,CAAC,UAAD,CAjBE;AAmBNzB,gBAAAA,QAnBM,GAmBKX,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAeiC,UAAf,EAA2B,IAA3B,EAAiC,CAAjC,CAAZ,CAnBL;AAoBNI,gBAAAA,QApBM,aAoBQH,GApBR,cAoBef,IAAI,CAACK,IApBpB;AAqBNvB,gBAAAA,IArBM,sBAqBaoC,QArBb;;AAsBZ,sBAAK1C,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;AAtBY;AAAA,uBAuBN,MAAKM,KAAL,CAAWM,OAAX,CAAmBe,QAAnB,CAA4B,MAAKrB,KAAL,CAAWW,SAAvC,EAAkDS,IAAlD,EAAwDO,QAAxD,CAvBM;;AAAA;AAwBN8B,gBAAAA,YAxBM,GAwBSL,UAAU,CAAC,UAAD,CAxBnB;;AA0BZ,sBAAKtC,QAAL,CAAc;AACVxB,kBAAAA,KAAK,kCACE,MAAKU,KAAL,CAAWV,KADb;AAEDG,oBAAAA,KAAK,+BAAM,MAAKO,KAAL,CAAWV,KAAX,CAAiBG,KAAvB,IAA8B2B,IAA9B;AAFJ,oBADK;AAKV/B,kBAAAA,KAAK,+BACE,MAAKW,KAAL,CAAWX,KADb,IAED;AACImD,oBAAAA,GAAG,YAAK,MAAKC,WAAV,mBAA8BgB,YAAY,CAACf,GAA3C,CADP;AAEIzD,oBAAAA,GAAG,EAAEwE,YAAY,CAACd,IAFtB;AAGI9C,oBAAAA,OAAO,EAAE,MAAKG,KAAL,CAAWH,OAHxB;AAIID,oBAAAA,KAAK,EAAE,MAAKI,KAAL,CAAWJ;AAJtB,mBAFC;AALK,iBAAd;;AAgBA,sBAAKkB,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;AA1CY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;4EA6CP,mBAAOgE,aAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wDACcA,aADd;;AAAA;AACL,yEAAkC;AAAvBpB,oBAAAA,IAAuB;;AAChC;AACA,0BAAKxB,QAAL,CAAc;AAACnB,sBAAAA,UAAU,EAAE2C;AAAb,qBAAd;AACD;AAJI;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;0IAOO;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT,MAAKtC,KAAL,CAAWL,UAAX,IAAyB,IADhB;AAAA;AAAA;AAAA;;AACuBG,cAAAA,OAAO,CAACc,KAAR,CAAc,iBAAd;AADvB;AAAA;;AAAA;AAAA;AAAA,qBAGF,MAAK+C,aAAL,CAAmB,MAAK3D,KAAL,CAAWL,UAA9B,CAHE;;AAAA;AAAA;AAAA,qBAKF,MAAK8B,UAAL,CAAgB,MAAKzB,KAAL,CAAWV,KAA3B,CALE;;AAAA;AAOR,oBAAKwB,QAAL,CAAc;AACVnB,gBAAAA,UAAU,EAAE,IADF;AAEVC,gBAAAA,KAAK,EAAE,IAFG;AAGVC,gBAAAA,OAAO,EAAE;AAHC,eAAd;;AAMA,oBAAK4B,UAAL,CAAgB,MAAKzB,KAAL,CAAWV,KAA3B;;AAEA,oBAAKwB,QAAL,CAAc;AACZ1B,gBAAAA,aAAa,EAAE;AADH,eAAd;;AAfQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mEAsBD,UAACwE,CAAD,EAAO;AAClB,YAAK9C,QAAL,CAAc;AAAClB,QAAAA,KAAK,EAAEgE,CAAC,CAACC,MAAF,CAAShC;AAAjB,OAAd;AACH,K;;qEAEgB,UAAC+B,CAAD,EAAO;AACpB,YAAK9C,QAAL,CAAc;AAACjB,QAAAA,OAAO,EAAE+D,CAAC,CAACC,MAAF,CAAShC;AAAnB,OAAd;AACH,K;;;;;;;;;;;;;;;AAvQC,qBAAKf,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;uBACuB,KAAKoE,WAAL,E;;;AAAjB7D,gBAAAA,Q;AACN,qBAAKa,QAAL,CAAc;AACZb,kBAAAA,QAAQ,EAAEA;AADE,iBAAd;AAIA,qBAAKa,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;uBACmC,KAAKqE,YAAL,E;;;;AAA5BpD,gBAAAA,S,yBAAAA,S;AAAWL,gBAAAA,O,yBAAAA,O;AAClB,qBAAKQ,QAAL,CAAc;AACZR,kBAAAA,OAAO,EAAEA,OADG;AAEZK,kBAAAA,SAAS,EAAEA;AAFC,iBAAd;AAKA,qBAAKG,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;uBACM,KAAKsE,cAAL,E;;;AAEN,qBAAKlD,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;uBACoB,KAAKuE,YAAL,E;;;AAAd3E,gBAAAA,K;;qBACFA,K;;;;;;uBACI,KAAK4E,iBAAL,CAAuB5E,KAAvB,C;;;AACN,qBAAKwB,QAAL,CAAc;AACZxB,kBAAAA,KAAK,EAAEA,KADK;AAEZH,kBAAAA,SAAS,EAAE;AAFC,iBAAd;;;;;AAMEW,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;;AAGJ,qBAAKe,QAAL,CAAc;AAACpB,kBAAAA,cAAc,EAAE;AAAjB,iBAAd;;;;;;;;;;;;;;;;AAGF;AACJ;AACA;;;;uCAuOuB;AACf,UAAIyE,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAKpE,KAAL,CAAWX,KAAzB,EAAgC;AAC5B8E,QAAAA,GAAG,CAACE,IAAJ,CAAS;AACL,kBAAQD,CAAC,CAACxE,KADL;AAEL,qBAAW,CAACwE,CAAC,CAACvE,OAAH,CAFN;AAGL,kBAAQ,CAAC,QAAD,EAAW,MAAX,CAHH;AAIL,yBAAe;AAJV,SAAT;AAMH;;AAED,UAAMyE,MAAM,GAAG;AACXC,QAAAA,QAAQ,EAAEJ;AADC,OAAf;AAIA,aAAOG,MAAP;AACH;;;6BAEO;AAAA;;AACN,UAAME,UAAU,GAAG,KAAKC,gBAAL,EAAnB;AACA,aACI,4BACE,MAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKC,MADf;AAEE,QAAA,OAAO,EAAE,QAFX;AAGE,QAAA,QAAQ,EAAE,IAHZ;AAIE,QAAA,QAAQ,EAAE,EAAE,KAAK1E,KAAL,CAAWN,cAAX,KAA8B,IAAhC,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG;AAAA,YAAEiF,YAAF,UAAEA,YAAF;AAAA,YAAgBC,aAAhB,UAAgBA,aAAhB;AAAA,eACC;AAAK,UAAA,SAAS,EAAC;AAAf,WAA8BD,YAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,4BAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEM,MAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAI,CAAC5E,KAAL,CAAWN,cAAX,KAA8B,IAA/B,IACD,4BACA,MAAC,GAAD;AAAK,UAAA,GAAG,EAAE,GAAV;AAAe,UAAA,OAAO,EAAC,QAAvB;AAAgC,UAAA,KAAK,EAAE;AAAEmF,YAAAA,YAAY,EAAE,MAAhB;AAAwBC,YAAAA,SAAS,EAAE;AAAnC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADF,CADA,EAMA,MAAC,GAAD;AAAK,UAAA,GAAG,EAAE,GAAV;AAAe,UAAA,KAAK,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAED,YAAAA,YAAY,EAAE;AAAhB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAqC,UAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA5C,CADJ,EAEI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAqC,UAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5C,CAFJ,EAGI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAqC,UAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA5C,CAHJ,CADF,CANA,CAFF,EAgBG,EAAE,MAAI,CAAC7E,KAAL,CAAWN,cAAX,KAA8B,IAAhC,KACD,4BACA,MAAC,GAAD;AAAK,UAAA,GAAG,EAAE,GAAV;AAAe,UAAA,OAAO,EAAC,QAAvB;AAAgC,UAAA,KAAK,EAAE;AAAEmF,YAAAA,YAAY,EAAE,MAAhB;AAAwBC,YAAAA,SAAS,EAAE;AAAnC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAe,UAAA,KAAK,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADF,CADA,EAMA,MAAC,GAAD;AAAK,UAAA,GAAG,EAAE,GAAV;AAAe,UAAA,KAAK,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAED,YAAAA,YAAY,EAAE;AAAhB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAqC,UAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA5C,CADJ,CADF,CANA,EAWA,MAAC,GAAD;AAAK,UAAA,GAAG,EAAE,GAAV;AAAe,UAAA,KAAK,EAAC,QAArB;AAA8B,UAAA,KAAK,EAAE;AAAEA,YAAAA,YAAY,EAAE;AAAhB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,GAAD;AAAK,UAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEE,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAU,MAAI,CAAC/E,KAAL,CAAWN,cAArB,CADJ,CADJ,CADN,CADF,CAXA,CAjBF,CAFN,CADD;AAAA,OANH,CADF,EAoDE,MAAC,IAAD;AACI,QAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN,cADxB;AAEI,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWJ,KAFtB;AAGI,QAAA,YAAY,EAAE,KAAKoF,YAHvB;AAII,QAAA,OAAO,EAAE,KAAKhF,KAAL,CAAWH,OAJxB;AAKI,QAAA,cAAc,EAAE,KAAKoF,cALzB;AAMI,QAAA,aAAa,EAAE,KAAKC,aANxB;AAOI,QAAA,aAAa,EAAE,KAAKlF,KAAL,CAAWZ,aAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApDF,EA6DE,MAAC,OAAD;AAAS,QAAA,MAAM,EAAEoF,UAAjB;AAA6B,QAAA,UAAU,EAAEA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7DF,CADJ;AAiEH;;;;EAvXsBrG,KAAK,CAACgH,S;;AA0X/B,eAAenG,UAAf","sourcesContent":["import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport { Buckets } from '@textile/hub'\nimport {getMetamaskIdentity} from '../lib/signerconnect'\nimport { Card,Text, Row, Col, Loading } from '@geist-ui/react';\nimport {Upload, Meh} from '@geist-ui/react-icons'\nimport Form from './Form';\nimport Private from \"./Private\"\n\nclass MyDropzone extends React.Component {\n\n    ipfsGateway = 'https://hub.textile.io'\n    keyInfo = {\n      key: 'bxch3ikjx6yg2m4ewyeussjeuoy'\n    }\n    keyInfoOptions = {\n      debug: true\n    }\n    state = {\n        isLoading: true,\n        submitSuccess: false,\n        files: [],\n        index: {\n          author: '',\n          date: 0,\n          paths: [],\n          loadingMessage: \"loading\",\n      },\n      input_file: null,\n      title: null,\n      authors: null,\n    }\n\n    async componentDidMount() {\n      this.setState({loadingMessage: \"waiting for metamask\"})\n      const identity = await this.getIdentity()\n      this.setState({\n        identity: identity\n      })\n\n      this.setState({loadingMessage: \"fetching data\"})\n      const {bucketKey, buckets} = await this.getBucketKey()\n      this.setState({\n        buckets: buckets,\n        bucketKey: bucketKey\n      })\n\n      this.setState({loadingMessage: \"fetching data\"})\n      await this.getBucketLinks()\n\n      this.setState({loadingMessage: \"fetching data\"})\n      const index = await this.getFileIndex()\n      if (index) {\n        await this.filelistFromIndex(index)\n        this.setState({\n          index: index,\n          isLoading: false\n        })\n      }\n      else {\n          console.log(\"No index\")\n      }\n\n      this.setState({loadingMessage: null})\n    }\n\n    /**\n     * Textile Bucket api init\n     */\n    getIdentity = async () => {\n      try {\n        return getMetamaskIdentity()\n      }\n      catch (e) {\n        console.log(\"Couldn't connect to metamask\")\n      }\n    }\n\n    getBucketKey = async () => {\n      if (!this.state.identity) {\n        throw new Error('Identity not set')\n      }\n      const buckets = await Buckets.withKeyInfo(this.keyInfo, this.keyInfoOptions)\n      // Authorize the user and your insecure keys with getToken\n      await buckets.getToken(this.state.identity)\n\n      const buck = await buckets.getOrCreate('io.textile.dropzone')\n      if (!buck.root) {\n        throw new Error('Failed to open bucket')\n      }\n      return {buckets: buckets, bucketKey: buck.root.key};\n    }\n\n    getBucketLinks = async () => {\n      if (!this.state.buckets || !this.state.bucketKey) {\n        console.error('No bucket client or root key')\n        return\n      }\n      const links = await this.state.buckets.links(this.state.bucketKey)\n      this.setState({\n        ...links\n      })\n    }\n\n    /**\n     * Storing and retrieval from bucket\n     * store metadata json into bucket\n     */\n    storeIndex = async (index) => {\n      if (!this.state.buckets || !this.state.bucketKey) {\n        console.error('No bucket client or root key')\n        return\n      }\n      const buf = Buffer.from(JSON.stringify(index, null, 2))\n      const path = `index.json`\n      await this.state.buckets.pushPath(this.state.bucketKey, path, buf)\n    }\n\n    initIndex = async () => {\n      if (!this.state.identity) {\n        console.error('Identity not set')\n        return\n      }\n      // this will be converted to JSON, this is author metadata\n      const index = {\n        author: this.state.identity.public.toString(),\n        date: (new Date()).getTime(),\n        paths: []\n      }\n\n      await this.storeIndex(index)\n      return index\n    }\n\n    filelistFromIndex = async (index) => {\n        this.setState({loadingMessage: \"fetching filelist\"})\n        if (!this.state.buckets || !this.state.bucketKey) {\n            console.error('No bucket client or root key')\n            return\n        }\n\n        // get file paths from index.paths array\n        for (let path of index.paths) {\n            console.log(path)\n            const metadata = await this.state.buckets.pullPath(this.state.bucketKey, path)\n            console.log(await this.state.buckets.links(this.state.bucketKey))\n            const { value } = await metadata.next();\n            let str = \"\";\n            for (var i = 0; i < value.length; i++) {\n                str += String.fromCharCode(parseInt(value[i]));\n            }\n            const json = JSON.parse(str)\n            const file = json.original\n            this.setState({\n              files: [\n                ...this.state.files,\n                {\n                  src:`${this.ipfsGateway}/ipfs/${file.cid}`,\n                  key: file.name,\n                  authors: file.authors,\n                  title: file.title,\n                }\n              ]\n            })\n        }\n    }\n\n    getJSONFromBucket = async (path) => {\n        const data = this.state.buckets.pullPath(this.state.bucketKey, path)\n        const { value } = await data.next();\n        let str = \"\";\n        for (var i = 0; i < value.length; i++) {\n          str += String.fromCharCode(parseInt(value[i]));\n        }\n        const json_data = JSON.parse(str)\n        return json_data\n    }\n\n    getFileIndex = async () => {\n      if (!this.state.buckets || !this.state.bucketKey) {\n        console.error('No bucket client or root key')\n        return\n      }\n      try {\n        const index = await this.getJSONFromBucket('index.json')\n        return index\n      } catch (error) {\n        console.log(error)\n        console.log(\"\\n\\ninitializing INDEX\\n\\n\")\n        const index = await this.initIndex()\n        // await this.initPublicGallery()\n        return index\n      }\n    }\n\n    /**\n     * File handling, on drop and setting metadata, uploading to bucket etc.\n     */\n    insertFile = async (file, path) => {\n      if (!this.state.buckets || !this.state.bucketKey) {\n        throw new Error('No bucket client or root key')\n      }\n      const buckets = this.state.buckets\n      return await buckets.pushPath(this.state.bucketKey, path, file.stream())\n    }\n\n    processAndStore = async (file, path, name) => {\n      const location = `${path}${name}`\n      const raw = await this.insertFile(file, location)\n      const metadata = {\n        cid: raw.path.cid.toString(),\n        name: name,\n        path: location,\n      }\n      return metadata\n    }\n\n    handleNewFile = async (file) => {\n        this.setState({loadingMessage: \"handling file\"})\n        console.log(\"handleNewFile()\")\n        if (!this.state.buckets || !this.state.bucketKey) {\n            console.error('No bucket client or root key')\n            return\n        }\n        const fileSchema = {}\n        const now = new Date().getTime()\n\n        fileSchema['date'] = now\n        fileSchema['name'] = `${file.name}`\n        fileSchema['title'] = this.state.title\n        fileSchema['authors'] = this.state.authors\n        \n        const filename = `${now}_${file.name}`\n        this.setState({loadingMessage: \"pushing file to bucket\"})\n        fileSchema['original'] = await this.processAndStore(file, 'originals/', filename)\n\n        const metadata = Buffer.from(JSON.stringify(fileSchema, null, 2))\n        const metaname = `${now}_${file.name}.json`\n        const path = `metadata/${metaname}`\n        this.setState({loadingMessage: \"pushing metadata\"})\n        await this.state.buckets.pushPath(this.state.bucketKey, path, metadata)\n        const fileOnBucket = fileSchema['original']\n\n        this.setState({\n            index: {\n                ...this.state.index,\n                paths: [...this.state.index.paths, path]\n            },\n            files: [\n                ...this.state.files,\n                {\n                    src: `${this.ipfsGateway}/ipfs/${fileOnBucket.cid}`,\n                    key: fileOnBucket.name,\n                    authors: this.state.authors,\n                    title: this.state.title,\n                }\n            ]\n        })\n\n        this.setState({loadingMessage: null})\n    }\n\n    onDrop = async (acceptedFiles) => {\n        for (const file of acceptedFiles) {\n          //setting a simple format date_filename\n          this.setState({input_file: file})\n        }\n    }\n\n    submitHandler = async () => {\n        if(this.state.input_file == null) {console.error(\"\\n\\nNo file\\n\\n\")}\n        else{\n            await this.handleNewFile(this.state.input_file)\n\n            await this.storeIndex(this.state.index)\n\n            this.setState({\n                input_file: null,\n                title: null,\n                authors: null,\n            })\n\n            this.storeIndex(this.state.index)\n\n            this.setState({\n              submitSuccess: true\n            })\n            \n        }\n    }\n\n    titleHandler = (e) => {\n        this.setState({title: e.target.value})\n    }\n\n    authorsHandler = (e) => {\n        this.setState({authors: e.target.value})\n    }\n\n    formatBucketData() {\n        var res = []\n        for (var f in this.state.files) {\n            res.push({\n                \"Name\": f.title,\n                \"Authors\": [f.authors,],\n                \"Tags\": [\"Brains\", \"fMRI\"],\n                \"BIDSVersion\": \"1.0.2\",\n            })\n        }\n\n        const myData = {\n            mockData: res,\n        }\n\n        return myData\n    }\n\n    render(){\n      const bucketData = this.formatBucketData()\n      return (\n          <>\n            <Dropzone\n              onDrop={this.onDrop}\n              maxSize={20000000}\n              multiple={true}\n              disabled={!(this.state.loadingMessage === null)}\n              >\n              {({getRootProps, getInputProps}) => (\n                <div className=\"dropzone\" {...getRootProps()}>\n                  <input {...getInputProps()} />\n                      <Card hoverable width=\"100%\">\n                        {(this.state.loadingMessage === null) &&\n                        <>\n                        <Row gap={0.8} justify=\"center\" style={{ marginBottom: '15px', marginTop: '15px'}}>\n                          <Col span={1.5}>\n                              <Upload size={40}/>\n                          </Col>\n                        </Row>\n                        <Row gap={0.8} align=\"center\" style={{ marginBottom: '15px' }}>\n                          <Col span={30}>\n                              <Text type=\"primary\" align=\"center\"  medium><b>Drag and Drop</b></Text>\n                              <Text type=\"primary\" align=\"center\"  medium><b>or</b></Text>\n                              <Text type=\"primary\" align=\"center\"  medium><b>Click to Select Files</b></Text>\n                          </Col>\n                        </Row>\n                        </>}\n                        {!(this.state.loadingMessage === null) &&\n                        <>\n                        <Row gap={0.8} justify=\"center\" style={{ marginBottom: '15px', marginTop: '15px'}}>\n                          <Col span={1.5}>\n                              <Meh size={40} color=\"grey\"/>\n                          </Col>\n                        </Row>\n                        <Row gap={0.8} align=\"center\" style={{ marginBottom: '15px' }}>\n                          <Col span={30}>\n                              <Text type=\"primary\" align=\"center\"  medium><b>Please Wait</b></Text>\n                          </Col>\n                        </Row>\n                        <Row gap={0.8} align=\"center\" style={{ marginBottom: '15px' }}>\n                          <Col span={30}>\n                                <div>\n                                    <Row style={{ padding: '10px'}}>\n                                        <Loading>{this.state.loadingMessage}</Loading>\n                                    </Row>\n                                </div>\n                          </Col>\n                        </Row>\n                        </>}\n                      </Card>\n                </div>\n              )}\n            </Dropzone>\n            <Form\n                loading={this.state.loadingMessage}\n                title={this.state.title}\n                titleHandler={this.titleHandler}\n                authors={this.state.authors}\n                authorsHandler={this.authorsHandler}\n                submitHandler={this.submitHandler}\n                submitSuccess={this.state.submitSuccess}/>\n\n            <Private myData={bucketData} accessData={bucketData} />            \n          </>\n      )\n  }\n}\n\nexport default MyDropzone;\n"]},"metadata":{},"sourceType":"module"}